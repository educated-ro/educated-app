<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a1383e49-5934-44b9-96be-c0684f9a2cf2" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AsessemntUnderEvaluation.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentBody/Questions/QuestionButtons.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentGrid.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentsLayout.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/ChangeStatusDialog.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/StudentAssessmentsView/StudentAssessmentsTabs.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/StudentAssessmentsView/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/TrainerAssessmentView/TrainerAssessmentsTabs.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/TrainerAssessmentView/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/modules/Assessments/useAssessmentActions.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postcss.config.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/assessments/[assessmentId]/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/assessments/[assessmentId]/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/assessments/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/assessments/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/head.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/head.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/AssessmentBody.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentBody/AssessmentBody.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Image.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/ui/Image.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Layout/GeneralLayout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/Layout/GeneralLayout/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Layout/GeneralLayout/LoggedInContext.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Layout/utils/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/NotLoggedIn.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/NotLoggedIn.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/modules/Assessment/AssesmentQuestions/Fields.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentBody/Questions/Fields.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/modules/Assessment/AssesmentQuestions/QuestionMedia.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentBody/Questions/QuestionMedia.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/modules/Assessment/AssesmentQuestions/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentBody/Questions/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/modules/Assessment/AssessmentTabs/AssessmentCard..tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentCard..tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/modules/Assessment/AssessmentTabs/AssessmentsTabs.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/modules/Assessment/Requirement/RequirementText.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentBody/Questions/RequirementText.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/modules/Assessment/SectionContainer.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentBody/SectionContainer.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/api/strapi/[collection].ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/api/strapi/[collection].ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/services/Assessment.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/services/Assessment.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/services/AssessmentsSession.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/services/AssessmentsSession.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/services/instance.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/services/instance.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/types/assessment/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/types/assessment/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/assessments.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/assessments.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/auth-session.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/auth-session.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tailwind.config.js" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
        <option value="TypeScript JSX File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2KrWYI29U2es9oOVJnLv6xZFuzR" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "js.last.introduce.type": "CONST",
    "last_opened_file_path": "/Users/sebastian.simionescu/Projects/educated-test-generator/public",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_interpreter_path": "node",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "/Users/sebastian.simionescu/Projects/educated-test-generator/node_modules/prettier",
    "settings.editor.selected.configurable": "editor.preferences.appearance",
    "ts.external.directory.path": "/Users/sebastian.simionescu/Projects/educated-test-generator/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/public" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/components/Layout/GeneralLayout" />
      <recent name="$PROJECT_DIR$/src/components/ui" />
      <recent name="$PROJECT_DIR$/src/components/modules/Assessments/AssessmentBody" />
      <recent name="$PROJECT_DIR$/src/components/modules/Assessments2/AssessmentBody/Questions" />
      <recent name="$PROJECT_DIR$/src/components/modules/Assessments2/AssessmentBody" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="dev" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.dev" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a1383e49-5934-44b9-96be-c0684f9a2cf2" name="Changes" comment="" />
      <created>1674733227031</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1674733227031</updated>
      <workItem from="1674733228076" duration="4706000" />
      <workItem from="1674738477658" duration="316479000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>